{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","propsTypes","PropsTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","console","log","animate__animated","animate__fadeIn","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,cAAC,WAAD,UACI,sBAAMC,SAZO,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EAEPU,SAtBI,SAACP,GAEjBF,EAAcE,EAAEQ,OAAOF,eA2B/BZ,EAAYe,WAAa,CACrBd,YAAae,IAAWC,KAAKC,Y,mCClCpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAItB,ECJwB,SAACA,GACzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBC,YAAW,WACPJ,EAAS,CAAEf,KAAMkB,EAAML,SAAS,MACjC,UAGR,CAACpB,IAEGqB,EDZmBM,CAAa3B,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAmBd,OAjBAQ,QAAQC,IAAIT,GACZQ,QAAQC,IAAItB,GAiBR,qCACI,oBAAIuB,mBAAiB,EAACC,iBAAe,EAArC,SAAuC/B,IACtCoB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAEQT,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aETtBqB,EArBO,WAElB,MAAgClD,mBAAS,CAAC,cAA1C,mBAAOkB,EAAP,KAAiBnB,EAAjB,KAEA,OAAO,eAAC,WAAD,WACH,+CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBACA,6BAEQmB,EAASS,KAAI,SAAAT,GAAQ,OACjB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCX7BiC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a54e720.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport PropsTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategory }) => {\n\n    const [inputValue, setinputValue] = useState('')\n    const inputChange = (e) => {\n        // capturamos le valor del imput\n        setinputValue(e.target.value)\n    }\n\n    const handelSubmit = (e) => {\n        //prevenimos el comportamiento por defecto de alguna etiqueta p.e el input\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategory(cast => [inputValue, ...cast]);\n            setinputValue('')\n        }\n    }\n\n    return (\n        <Fragment>\n            <form onSubmit={handelSubmit}>\n                <input\n                    type='text'\n                    value={inputValue}\n                    // cambiamos elÃ± estado del input mediante el onChange\n                    onChange={inputChange}></input>\n            </form>\n\n        </Fragment>\n    )\n}\n\nAddCategory.propsTypes = {\n    setCategory: PropsTypes.func.isRequired\n}\n","\n\nexport const getGifs = async (category) => {\n\n    // llamo a la api creada desde postman\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Eju47NEUUslPsWNNzxLNZ3U3jrxEsh79`;\n    // capturo la respuesta de la llamada\n    const resp = await fetch(url);\n    // me devuelve la llamda de la api en formato json\n    const { data } = await resp.json()\n    const gift = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n\n    })\n    return gift\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifts'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n\n    // importando hooks y desetruturando los datos que estan en el hook\n    const { data, loading } = useFetchGifs(category);\n\n    console.log(loading);\n    console.log(data);\n\n    // ----------------------------------------------------------------------------------------------------------------//\n\n    // usando el use Efect hacemos que las peticiones en el caso de este componente se haga una vez\n    // debemos llamar a la funcion donde hacemos la peticion y luego como segundo parametro pasarle la lista de dependencias vacia\n    // para que no ejecuto la funcion nuevamente.\n    // useEffect(() => {\n    //     getGifs(category).then(imgs => {\n    //         setImages(imgs)\n    //     })\n    // }, [category])\n\n    // ----------------------------------------------------------------------------------------------------------------//\n\n\n    return (\n        <>\n            <h3 animate__animated animate__fadeIn>{category}</h3>\n            {loading && <p>Loading</p>}\n\n            <div className='card-grid'>\n                {\n                    data.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img} />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../Helpers/getGifs'\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then(imgs => {\n\n            setTimeout(() => {\n                setstate({ data: imgs, loading: false })\n            }, 3000)\n\n        })\n    }, [category])\n\n    return state; // {data: [], loading}\n}\n\n","import React, { useState, Fragment } from 'react'\nimport { AddCategory } from './Components/AddCategory'\nimport { GifGrid } from './Components/GifGrid'\n\n\n\nconst GiftExpertApp = () => {\n\n    const [category, setCategory] = useState([\"One Punch\"])\n\n    return <Fragment>\n        <h2>GiftExpertApp</h2>\n        <AddCategory setCategory={setCategory}></AddCategory>\n        <hr></hr>\n        <ol>\n            {\n                category.map(category => (\n                    <GifGrid\n                        key={category}\n                        category={category} />\n                ))\n            }\n        </ol>\n    </Fragment>\n\n\n}\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GiftExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}